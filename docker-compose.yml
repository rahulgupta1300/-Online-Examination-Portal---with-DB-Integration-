version: '2.1'

services:
  auth-service:
    build: microservices/auth-service
    image: ${SG_EXAM_REGISTRY}/auth-service:${SG_EXAM_VERSION}
    mem_limit: 256m
    networks:
      - my-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_LOCATION=file:/config-repo/application.yml,file:/config-repo/auth-service.yml
    volumes:
      - $PWD/config-repo:/config-repo
    depends_on:
      user-service:
        condition: service_healthy

  user-service:
    build: microservices/user-service
    image: ${SG_EXAM_REGISTRY}/user-service:${SG_EXAM_VERSION}
    mem_limit: 256m
    networks:
      - my-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_LOCATION=file:/config-repo/application.yml,file:/config-repo/user-service.yml
    volumes:
      - $PWD/config-repo:/config-repo

  exam-service:
    build: microservices/exam-service
    image: ${SG_EXAM_REGISTRY}/exam-service:${SG_EXAM_VERSION}
    mem_limit: 256m
    networks:
      - my-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_LOCATION=file:/config-repo/application.yml,file:/config-repo/exam-service.yml
    volumes:
      - $PWD/config-repo:/config-repo

  msc-service:
    build: microservices/msc-service
    image: ${SG_EXAM_REGISTRY}/msc-service:${SG_EXAM_VERSION}
    mem_limit: 256m
    networks:
      - my-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_LOCATION=file:/config-repo/application.yml,file:/config-repo/msc-service.yml
    volumes:
      - $PWD/config-repo:/config-repo

  admin-service:
    build: frontend/sg-exam-admin
    image: ${SG_EXAM_REGISTRY}/admin-service:${SG_EXAM_VERSION}
    networks:
      - my-network
    environment:
      - TENANT_CODE=gitee

  app-service:
    build: frontend/sg-exam-app
    image: ${SG_EXAM_REGISTRY}/app-service:${SG_EXAM_VERSION}
    networks:
      - my-network
    environment:
      - TENANT_CODE=gitee

  sg-exam-mysql:
    build:
      context: ./mysql
    image: ${SG_EXAM_REGISTRY}/sg-exam-mysql:${SG_EXAM_VERSION}
    container_name: sg-exam-mysql
    networks:
      - my-network
    environment:
      - MYSQL_ROOT_PASSWORD=sg-exam
    ports:
      - "3306:3306"
    restart: always

networks:
  my-network:
    name: my-network
